/*
Given a list of non-negative integers nums, arrange them such that they form the largest number.

Note: The result may be very large, so you need to return a string instead of an integer. 

Example 1:
Input: nums = [10,2]
Output: "210"

Example 2:
Input: nums = [3,30,34,5,9]
Output: "9534330"

Example 3:
Input: nums = [1]
Output: "1"

Example 4:
Input: nums = [10]
Output: "10"
 

Constraints:

1 <= nums.length <= 100
0 <= nums[i] <= 109
*/

class LargestNumber  {
    public String largestNumber(int[] nums) {
        
        String[] str_nums = new String[nums.length];
        
        for(int i=0; i< nums.length; i++){
            str_nums[i] = String.valueOf(nums[i]);
        }
        
        Arrays.sort(str_nums, new Comparator<String>(){
            
            public int compare(String s1, String s2){
                
                String firstOrder = s1 + s2;
                String secondOrder = s2 + s1;
                
                return secondOrder.compareTo(firstOrder);
            }
        });
        
        StringBuilder sb = new StringBuilder();
        for(String s : str_nums){
            sb.append(s);
        }
        
        if(sb.charAt(0) == '0'){
            return String.valueOf('0');
        }
        
        return sb.toString();
    }
}
